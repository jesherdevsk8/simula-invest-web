<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Redirecionando para o app...</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="Redirecionando para o app ConnectHunt">
  <!-- Fallback: redirecionamento automático via meta tag -->
  <meta http-equiv="refresh" content="0; url=<%= @deep_link %>">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #20B2AA 0%, #008B8B 100%);
      color: white;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }
    
    .container {
      background: rgba(255, 255, 255, 0.95);
      color: #2C3E50;
      padding: 50px 40px;
      border-radius: 24px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
      max-width: 420px;
      width: 100%;
      text-align: center;
      border: 1px solid rgba(32, 178, 170, 0.2);
    }
    
    .icon {
      width: 80px;
      height: 80px;
      background: linear-gradient(135deg, #20B2AA, #008B8B);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 30px;
      font-size: 2.5rem;
      color: white;
    }
    
    h1 {
      font-size: 1.8rem;
      font-weight: 600;
      margin-bottom: 15px;
      line-height: 1.3;
    }
    
    p {
      font-size: 1rem;
      line-height: 1.5;
      opacity: 0.9;
      margin-bottom: 35px;
    }
    
    .btn {
      display: inline-block;
      background: linear-gradient(135deg, #20B2AA, #008B8B);
      color: white;
      padding: 16px 32px;
      text-decoration: none;
      border-radius: 12px;
      font-weight: 600;
      font-size: 1rem;
      transition: all 0.3s ease;
      margin: 8px;
      border: none;
      cursor: pointer;
      min-width: 140px;
    }
    
    .btn:hover {
      background: linear-gradient(135deg, #008B8B, #20B2AA);
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(32, 178, 170, 0.4);
    }
    
    .btn-secondary {
      background: #6C7B95;
    }
    
    .btn-secondary:hover {
      background: #5A6B7D;
      box-shadow: 0 8px 20px rgba(108, 123, 149, 0.4);
    }
    
    .loading {
      display: block;
    }
    
    .fallback {
      display: none;
    }
    
    .spinner {
      border: 3px solid rgba(32, 178, 170, 0.3);
      border-top: 3px solid #20B2AA;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
      margin: 0 auto 25px;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .store-links {
      margin-top: 25px;
      display: flex;
      gap: 12px;
      justify-content: center;
      flex-wrap: wrap;
    }
    
    .debug-info {
      background: rgba(32, 178, 170, 0.1);
      color: #2C3E50;
      padding: 12px 16px;
      border-radius: 8px;
      margin-top: 25px;
      font-size: 0.85rem;
      font-family: 'SF Mono', Monaco, monospace;
      word-break: break-all;
      opacity: 0.8;
      border: 1px solid rgba(32, 178, 170, 0.2);
    }
    
    @media (max-width: 480px) {
      .container {
        padding: 40px 30px;
        margin: 10px;
      }
      
      h1 {
        font-size: 1.6rem;
      }
      
      .btn {
        padding: 14px 24px;
        font-size: 0.95rem;
        min-width: 120px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="icon" id="icon">📱</div>
    <div class="spinner" id="spinner"></div>
    <h1 id="title">Abrindo o app...</h1>
    <p id="message">Redirecionando para o ConnectHunt</p>
    
    <div class="store-links" id="actions" style="display: none;">
      <a href="<%= @deep_link %>" class="btn">Tentar novamente</a>
      <a href="https://apps.apple.com/br/app/connecthunt/id_do_seu_app" class="btn btn-secondary" id="app-store-link" style="display: none;">App Store</a>
      <a href="https://play.google.com/store/apps/details?id=com.seu.pacote" class="btn btn-secondary" id="play-store-link" style="display: none;">Google Play</a>
    </div>

    <!-- Informações de debug -->
    <div class="debug-info">
      <strong>Debug Info:</strong><br>
      Product ID: <%= @product_id %><br>
      Deep Link: <%= @deep_link %>
    </div>
  </div>

  <script>
    const icon = document.getElementById('icon');
    const spinner = document.getElementById('spinner');
    const title = document.getElementById('title');
    const message = document.getElementById('message');
    const actions = document.getElementById('actions');
    const appStoreLink = document.getElementById('app-store-link');
    const playStoreLink = document.getElementById('play-store-link');
    const deepLink = '<%= @deep_link %>';
    
    // Detectar sistema operacional
    function detectOS() {
      const userAgent = navigator.userAgent || navigator.vendor || window.opera;
      if (/android/i.test(userAgent)) {
        return 'android';
      } else if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
        return 'ios';
      }
      return 'unknown';
    }
    
    // Tentar abrir o app automaticamente
    function openApp() {
      window.location.href = deepLink;
    }
    
    // Função para mostrar fallback com loja correta
    function showFallback() {
      icon.textContent = '⚠️';
      spinner.style.display = 'none';
      title.textContent = 'App não encontrado';
      message.textContent = 'O ConnectHunt não está instalado no seu dispositivo';
      actions.style.display = 'flex';
      
      // Mostrar link da loja correta baseado no OS
      const os = detectOS();
      if (os === 'ios') {
        appStoreLink.style.display = 'inline-block';
      } else if (os === 'android') {
        playStoreLink.style.display = 'inline-block';
      } else {
        // Se não conseguir detectar, mostrar ambos
        appStoreLink.style.display = 'inline-block';
        playStoreLink.style.display = 'inline-block';
      }
    }
    
    // Executar imediatamente
    openApp();
    
    // Fallback: se não abrir em 1.5 segundos, mostrar opções (como no exemplo NestJS)
    const fallbackTimeout = setTimeout(() => {
      showFallback();
    }, 1500);
    
    // Detectar se o usuário voltou (app não foi aberto)
    let hidden = false;
    document.addEventListener('visibilitychange', () => {
      if (document.hidden) {
        hidden = true;
        // Limpa o timeout se a página for para o fundo (sinal que o app abriu)
        clearTimeout(fallbackTimeout);
      } else if (hidden) {
        // Usuário voltou, provavelmente o app não abriu
        setTimeout(() => {
          if (hidden) {
            showFallback();
          }
        }, 1000);
      }
    });
  </script>
</body>
</html>
